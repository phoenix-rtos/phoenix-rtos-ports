 networking/ping.c | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/networking/ping.c b/networking/ping.c
index 94fb007..179d9e6 100644
--- a/networking/ping.c
+++ b/networking/ping.c
@@ -25,6 +25,7 @@
  * The code was modified by Bart Visscher <magick@linux-fan.com>
  */
 
+#include <sys/socket.h>
 #include <net/if.h>
 #include <netinet/ip_icmp.h>
 #include "libbb.h"
@@ -693,6 +694,7 @@ static void unpack6(char *packet, int sz, struct sockaddr_in6 *from, int hoplimi
 static void ping4(len_and_sockaddr *lsa)
 {
 	int sockopt;
+	int flags;
 
 	pingaddr.sin = lsa->u.sin;
 	if (source_lsa) {
@@ -710,6 +712,9 @@ static void ping4(len_and_sockaddr *lsa)
 	sockopt = (datalen * 2) + 7 * 1024; /* giving it a bit of extra room */
 	setsockopt_SOL_SOCKET_int(pingsock, SO_RCVBUF, sockopt);
 
+	flags = fcntl(pingsock,F_GETFL,0);
+	fcntl(pingsock, F_SETFL, flags | O_NONBLOCK);
+
 	if (opt_ttl != 0) {
 		setsockopt_int(pingsock, IPPROTO_IP, IP_TTL, opt_ttl);
 		/* above doesn't affect packets sent to bcast IP, so... */
@@ -726,9 +731,11 @@ static void ping4(len_and_sockaddr *lsa)
 		struct sockaddr_in from;
 		socklen_t fromlen = (socklen_t) sizeof(from);
 		int c;
-
-		c = recvfrom(pingsock, G.rcv_packet, G.sizeof_rcv_packet, 0,
+		do {
+			usleep(500);
+			c = recvfrom(pingsock, G.rcv_packet, G.sizeof_rcv_packet, 0,
 				(struct sockaddr *) &from, &fromlen);
+		} while (c < 0 && errno == EAGAIN);
 		if (c < 0) {
 			if (errno != EINTR)
 				bb_perror_msg("recvfrom");
@@ -743,6 +750,7 @@ static void ping4(len_and_sockaddr *lsa)
 static void ping6(len_and_sockaddr *lsa)
 {
 	int sockopt;
+	int flags;
 	struct msghdr msg;
 	struct sockaddr_in6 from;
 	struct iovec iov;
@@ -775,6 +783,9 @@ static void ping6(len_and_sockaddr *lsa)
 	sockopt = (datalen * 2) + 7 * 1024; /* giving it a bit of extra room */
 	setsockopt_SOL_SOCKET_int(pingsock, SO_RCVBUF, sockopt);
 
+	flags = fcntl(pingsock,F_GETFL,0);
+	fcntl(pingsock, F_SETFL, flags | O_NONBLOCK);
+
 	sockopt = offsetof(struct icmp6_hdr, icmp6_cksum);
 	BUILD_BUG_ON(offsetof(struct icmp6_hdr, icmp6_cksum) != 2);
 	setsockopt_int(pingsock, SOL_RAW, IPV6_CHECKSUM, sockopt);
@@ -803,8 +814,10 @@ static void ping6(len_and_sockaddr *lsa)
 		struct cmsghdr *mp;
 		int hoplimit = -1;
 		msg.msg_controllen = sizeof(control_buf);
-
-		c = recvmsg(pingsock, &msg, 0);
+		do {
+			usleep(500);
+			c = recvmsg(pingsock, &msg, 0);
+		} while(c < 0 && errno == EAGAIN);
 		if (c < 0) {
 			if (errno != EINTR)
 				bb_perror_msg("recvfrom");
