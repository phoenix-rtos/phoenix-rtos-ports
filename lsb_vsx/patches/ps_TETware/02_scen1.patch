--- lsb_vsx/src/tet3/tcc/scen1.c	2024-10-16 15:22:06.485884602 +0200
+++ lsb_vsx.phoenix/src/tet3/tcc/scen1.c	2024-10-16 15:22:06.485884602 +0200
@@ -148,7 +148,7 @@
 
 /* static function declarations */
 static int find1scen PROTOLIST((void));
-static char *getline PROTOLIST((void));
+static char *tet_getline PROTOLIST((void));
 static void includefile PROTOLIST((char *, char *, int));
 static struct ifstack *ifsalloc PROTOLIST((void));
 static void ifsfree PROTOLIST((struct ifstack *));
@@ -243,7 +243,7 @@
 	**	the scenario processor can find it
 	*/
 	for (;;) {
-		if ((line = getline()) == (char *) 0)
+		if ((line = tet_getline()) == (char *) 0)
 			return(ferror(ifstp->if_fp) ? -1 : 0);
 		if (!isspace(*line)) {
 			/* start of new scenario */
@@ -286,7 +286,7 @@
 	register struct scentab *ep;
 
 	/* read the scenario name - starts in column 1 */
-	line = getline();
+	line = tet_getline();
 	ASSERT(line);
 	ASSERT(!isspace(*line));
 
@@ -314,7 +314,7 @@
 		return(-1);
 
 	/* process the rest of the current scenario */
-	while ((line = getline()) != (char *) 0) {
+	while ((line = tet_getline()) != (char *) 0) {
 		if (!isspace(*line)) {
 			/* a new scenario */
 			ungetline(line);
@@ -1174,7 +1174,12 @@
 **	return a pointer to the line, or (char *) 0 on EOF or error
 */
 
-static char *getline()
+/* 
+ * Since getline() is POSIX extension function and Phoenix-RTOS standard library
+ * declares that function without respecting `_POSIX_SOURCE` define we have to rename
+ * it to avoid compilation error
+ */
+static char *tet_getline()
 {
 	static char buf[LBUFLEN];
 	struct lcache *lcp;
@@ -1187,7 +1192,7 @@
 	if ((lcp = lcpop()) != (struct lcache *) 0) {
 		(void) strcpy(buf, lcp->lc_line);
 		lcfree(lcp);
-		TRACE2(tet_Tscen, 10, "getline(): line = <%s>", firstpart(buf));
+		TRACE2(tet_Tscen, 10, "tet_getline(): line = <%s>", firstpart(buf));
 		return(buf);
 	}
 
@@ -1218,14 +1223,14 @@
 			}
 			else
 				TRACE2(tet_Tscen, 10,
-					"getline(): encountered EOF on %s",
+					"tet_getline(): encountered EOF on %s",
 					ifstp->if_fname);
 			if (ifstp->if_next) {
 				(void) fclose(ifstp->if_fp);
 				ifsfree(ifspop());
 				continue;
 			}
-			TRACE1(tet_Tscen, 10, "getline(): return EOF");
+			TRACE1(tet_Tscen, 10, "tet_getline(): return EOF");
 			return((char *) 0);
 		}
 
@@ -1260,7 +1265,7 @@
 
 		/* if there is anything left, return it */
 		if (p >= buf) {
-			TRACE4(tet_Tscen, 10, "getline(): fname = %s, lineno = %s, line = <%s>",
+			TRACE4(tet_Tscen, 10, "tet_getline(): fname = %s, lineno = %s, line = <%s>",
 				ifstp->if_fname, tet_i2a(ifstp->if_lcount),
 				firstpart(buf));
 			return(buf);
