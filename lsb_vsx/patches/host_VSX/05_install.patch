--- lsb_vsx/test_sets/SRC/install/scripts/install.sh	2025-05-08 13:50:18.000000000 +0200
+++ lsb_vsx.host/test_sets/SRC/install/scripts/install.sh	2025-10-21 13:43:48.466866558 +0200
@@ -1,4 +1,4 @@
-: use Bourne Shell
+#!/usr/bin/env bash
 #########################################################################
 #									#
 #	SCCS:	@(#)install/scripts/install.sh	4.3 (03/03/98)  VSXgen release 1.4#
@@ -157,152 +157,6 @@
 
 #########################################################################
 #									#
-# Check whether the directory search routines work			#
-#									#
-#########################################################################
-
-cat > $cdirfile << 'E_O_F'
-#include <stdio.h>
-#include <sys/types.h>
-#include <dirent.h>
-main()
-{
-	DIR	*d;
-	struct	dirent	*dp;
-	char	*i;
-	int	c=0;
-
-	d = opendir(".");
-	while ((dp = readdir(d)) != 0)
-	{
-		i = (char *) dp->d_name;
-		c++;
-	}
-	closedir(d);
-	printf("%d\n", c);
-}
-E_O_F
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS "$cdirfile" $SYSLIBS > $tfile 2>&1
-
-if test "$?" != "0"
-then
-	echo "
-*** Could not compile test program for directory routines:
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS $cdirfile $SYSLIBS"
-	cat $tfile
-	echo "
-Check SRC/SYSINC/dirent.h before re-running install.sh"
-	exit 1
-fi
-
-mkdir $tdir
-touch $tdir/a $tdir/asjd $tdir/jsdhjas
-touch $tdir/kajshdjas $tdir/JH
-dir=`pwd`
-export dir
-(cd $tdir ; $dir/a.out > /tmp/ans 2>&1)
-rm -rf $tdir
-x=`cat /tmp/ans`
-if test "$x" != 7 -a "$x" != 5
-then
-	echo "
-*** Directory routines don't work!
-Check SRC/SYSINC/dirent.h before re-running install.sh"
-	exit 1
-fi
-
-#########################################################################
-#									#
-# Check whether variable argument lists work				#
-#									#
-#########################################################################
-
-cat << 'E_O_F' >$cfile
-#include <std.h>
-#include <stdlib.h>
-#if TEST_ANSI
-#include <stdarg.h>
-static int sub(char *, ...);
-#else
-#include <varargs.h>
-static int sub();
-#endif
-
-static char	arg1[] = "abc";
-static int	arg2 = 12345;
-static double	arg3 = 123.456;
-static char	arg4[] = "xyz";
-
-main(c, v)
-int c;
-char *v[];
-{
-	exit(sub(arg1, arg2, arg3, arg4));
-}
-
-static int
-#if TEST_ANSI
-sub(char *sarg1, ...)
-#else
-sub(sarg1, va_alist)
-char *sarg1;
-va_dcl
-#endif
-{
-	va_list ap;
-
-	if (sarg1 != arg1)
-		return 1;
-	
-#if TEST_ANSI
-	va_start(ap, sarg1);
-#else
-	va_start(ap);
-#endif
-
-	if (va_arg(ap, int) != arg2)
-		return 2;
-	
-	if (va_arg(ap, double) != arg3)
-		return 3;
-	
-	if (va_arg(ap, char *) != arg4)
-		return 4;
-	
-	va_end(ap);
-
-	return 0;
-}
-E_O_F
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS "$cfile" $SYSLIBS > $tfile 2>&1
-
-if test "$?" != "0" || grep arg "$tfile" > /dev/null 2>&1
-then
-	echo "
-*** Could not compile test program for variable argument lists
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS $cfile $SYSLIBS"
-	cat $tfile
-	echo "
-Check <stdarg.h>/<varargs.h> before re-running install.sh"
-	exit 1
-fi
-
-./a.out
-x=$?
-if test "$x" -ne 0
-then
-	echo "
-*** Variable argument lists don't work!  (test program exit code: $x)
-Check <stdarg.h>/<varargs.h> before re-running install.sh"
-	exit 1
-fi
-
-#########################################################################
-#									#
 # Set up the testroot 							#
 #									#
 #########################################################################
@@ -339,176 +193,6 @@
 )
 
 #########################################################################
-#
-# Create the TET/DTET config files
-#
-#########################################################################
-
-case $TEST_XNFS in
-[yY])
-	echo "
-Creating tetbuild.cfg, tetexec.cfg, tetclean.cfg, tetdist.cfg and systems"
-	;;
-*)
-	echo "
-Creating tetbuild.cfg, tetexec.cfg and tetclean.cfg"
-	;;
-esac
-
-if test -f $HOME/tetbuild.cfg
-then
-	echo >&2 "*** existing tetbuild.cfg moved to oldbuild.cfg"
-	rm -f $HOME/oldbuild.cfg
-	mv $HOME/tetbuild.cfg $HOME/oldbuild.cfg &&
-	$VSXDIR/install/scripts/editcfg.sh $HOME/oldbuild.cfg \
-		< $VSXDIR/install/tetbuild.cfg | \
-		$VSXDIR/install/scripts/editcfg.sh $VSXDIR/vsxparams \
-		> $HOME/tetbuild.cfg
-else
-	$VSXDIR/install/scripts/editcfg.sh $VSXDIR/vsxparams \
-		< $VSXDIR/install/tetbuild.cfg > $HOME/tetbuild.cfg
-fi
-
-cat $VSXDIR/vsxparams > $tfile
-packagelist=""
-for subset in $SUBSETS
-do
-	CONFIG_PACKAGE=""
-	. $VSXDIR/subsets/$subset/config_info
-	case " $packagelist " in
-	*" $CONFIG_PACKAGE "*) ;;
-	*) packagelist="$packagelist $CONFIG_PACKAGE" ;;
-	esac
-done
-echo "TEST_PACKAGES=\"$packagelist\"" >> $tfile
-echo "VSX_CC=\"$CC\"" >> $tfile
-echo "VSX_CFLAGS=\"$COPTS\"" >> $tfile
-echo "VSX_LIBS=\"$MLIB $SYSLIBS $LDFLAGS\"" >> $tfile
-case $TEST_XNFS in
-[yY])
-	templates=$VSXDIR/install/nfsexec.top
-	for subset in $SUBSETS
-	do
-		templates="$templates $VSXDIR/subsets/$subset/nfs_params"
-	done
-	templates="$templates $VSXDIR/install/nfsexec.bot"
-	;;
-*)
-	echo "VSX_NOSPC_DEV=\"$NOSPC_DEV\"" >> $tfile
-	templates=$VSXDIR/install/tetexec.top
-	for subset in $SUBSETS
-	do
-		templates="$templates $VSXDIR/subsets/$subset/exec_params"
-	done
-	templates="$templates $VSXDIR/install/tetexec.bot"
-	;;
-esac
-if test -f $TET_EXECUTE/tetexec.cfg
-then
-	echo >&2 "*** existing tetexec.cfg moved to oldexec.cfg"
-	rm -f $TET_EXECUTE/oldexec.cfg
-	mv $TET_EXECUTE/tetexec.cfg $TET_EXECUTE/oldexec.cfg &&
-	cat $templates | \
-		$VSXDIR/install/scripts/editcfg.sh $TET_EXECUTE/oldexec.cfg | \
-		$VSXDIR/install/scripts/editcfg.sh $tfile | \
-		sed "s?{TET_EXECUTE}?$TET_EXECUTE?g" > $TET_EXECUTE/tetexec.cfg
-else
-	cat $templates | \
-		$VSXDIR/install/scripts/editcfg.sh $tfile | \
-		sed "s?{TET_EXECUTE}?$TET_EXECUTE?g" > $TET_EXECUTE/tetexec.cfg
-fi
-
-if test -f $HOME/tetclean.cfg
-then
-	echo >&2 "*** existing tetclean.cfg moved to oldclean.cfg"
-	rm -f $HOME/oldclean.cfg
-	mv $HOME/tetclean.cfg $HOME/oldclean.cfg &&
-	$VSXDIR/install/scripts/editcfg.sh $HOME/oldclean.cfg \
-		< $VSXDIR/install/tetclean.cfg | \
-		$VSXDIR/install/scripts/editcfg.sh $VSXDIR/vsxparams \
-		> $HOME/tetclean.cfg
-else
-	$VSXDIR/install/scripts/editcfg.sh $VSXDIR/vsxparams \
-		< $VSXDIR/install/tetclean.cfg > $HOME/tetclean.cfg
-fi
-
-case $TEST_XNFS in
-[yY])
-	if test -f $HOME/tetdist.cfg
-	then
-		echo >&2 "*** existing tetdist.cfg moved to olddist.cfg"
-		rm -f $HOME/olddist.cfg
-		mv $HOME/tetdist.cfg $HOME/olddist.cfg
-	fi
-	echo "TET_REM001_TET_ROOT=\"$SERVER_TET_ROOT\"" > $tfile
-	echo "TET_REM001_TET_TSROOT=\"$SERVER_TET_ROOT/vsx4\"" >> $tfile
-	echo "TET_REM001_TET_EXECUTE=\"$SERVER_TET_ROOT/vsx4/TESTROOT\"" >> $tfile
-	$VSXDIR/install/scripts/editcfg.sh $tfile \
-		< $VSXDIR/install/tetdist.cfg > $HOME/tetdist.cfg
-
-	echo "0 $XNFS_CLIENT
-1 $XNFS_SERVER" > $tfile
-	if test -f $HOME/../systems
-	then
-		if cmp -s $HOME/../systems $tfile
-		then
-			rm -f $tfile
-		else
-			echo >&2 "*** existing systems file moved to systems.old"
-			rm -f $HOME/../systems.old
-			mv $HOME/../systems $HOME/../systems.old &&
-			mv $tfile $HOME/../systems
-		fi
-	else
-		mv $tfile $HOME/../systems
-	fi
-	;;
-esac
-
-#########################################################################
-#									#
-# Create scenario files including the sections for the selected subsets	#
-#									#
-#########################################################################
-echo "
-Creating the scenario files scen.bld and scen.exec"
-
-NFS=
-case $TEST_XNFS in
-[Yy]) NFS=nfs ;;
-esac
-
-if test -f $HOME/scen.bld
-then
-	echo "*** existing scen.bld moved to oldscen.bld"
-	rm -f $HOME/oldscen.bld
-	mv $HOME/scen.bld $HOME/oldscen.bld
-fi
-echo all > $HOME/scen.bld
-for subset in $SUBSETS
-do
-	if test -f $VSXDIR/subsets/$subset/${TEST_MODE}.${NFS}bld
-	then sed 1d $VSXDIR/subsets/$subset/${TEST_MODE}.${NFS}bld
-	else sed 1d $VSXDIR/subsets/$subset/scen.${NFS}bld
-	fi
-done >> $HOME/scen.bld
-
-if test -f $HOME/scen.exec
-then
-	echo "*** existing scen.exec moved to oldscen.exec"
-	rm -f $HOME/oldscen.exec
-	mv $HOME/scen.exec $HOME/oldscen.exec
-fi
-echo all > $HOME/scen.exec
-for subset in $SUBSETS
-do
-	if test -f $VSXDIR/subsets/$subset/${TEST_MODE}.${NFS}exec
-	then sed 1d $VSXDIR/subsets/$subset/${TEST_MODE}.${NFS}exec
-	else sed 1d $VSXDIR/subsets/$subset/scen.${NFS}exec
-	fi
-done >> $HOME/scen.exec
-
-#########################################################################
 #									#
 # Install userintf.c, rpcincs.h and testvars.h				#
 #									#
@@ -625,37 +309,9 @@
 #									#
 #########################################################################
 
-libs="vport vlib genlib tet_startup"
+libs="vport vlib genlib"
 thrlibs=""
 utils="vprog vtools"
-for subset in $SUBSETS
-do
-	INSTALL_LIBS=""
-	INSTALL_THRLIBS=""
-	INSTALL_UTILS=""
-	. $VSXDIR/subsets/$subset/install_info
-	for i in $INSTALL_LIBS
-	do
-		case " $libs " in
-		*" $i "*) ;; # already in list
-		*) libs="$libs $i" ;;
-		esac
-	done
-	for i in $INSTALL_THRLIBS
-	do
-		case " $thrlibs " in
-		*" $i "*) ;; # already in list
-		*) thrlibs="$thrlibs $i" ;;
-		esac
-	done
-	for i in $INSTALL_UTILS
-	do
-		case " $utils " in
-		*" $i "*) ;; # already in list
-		*) utils="$utils $i" ;;
-		esac
-	done
-done
 
 case $TEST_XNFS in
 [Yy])
@@ -681,14 +337,22 @@
 	then	echo "$dir make succeeded"
 	else	echo "$dir make failed:"
 		cat make.$target
+        exit 1
 	fi
     )
+    test "$?" -eq 1 && fail=1
 done
 
+if [ -n "$fail" ]; then
+    exit 1
+fi
+
 # end of output tee'd to journal file
 
 ) 2>&1 | tee "$JNLFILE"
 
+test "${PIPESTATUS[0]}" -eq "1" && exit 1
+
 # clean up: remove temporary files
 $rm_tmp1; $rm_tmp2
 
