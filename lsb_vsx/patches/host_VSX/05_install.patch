--- lsb_vsx/test_sets/SRC/install/scripts/install.sh	2025-05-08 13:50:18.989594058 +0200
+++ lsb_vsx.host/test_sets/SRC/install/scripts/install.sh	2025-05-13 14:16:55.042485405 +0200
@@ -1,4 +1,4 @@
-: use Bourne Shell
+#!/usr/bin/env bash
 #########################################################################
 #									#
 #	SCCS:	@(#)install/scripts/install.sh	4.3 (03/03/98)  VSXgen release 1.4#
@@ -157,152 +157,6 @@
 
 #########################################################################
 #									#
-# Check whether the directory search routines work			#
-#									#
-#########################################################################
-
-cat > $cdirfile << 'E_O_F'
-#include <stdio.h>
-#include <sys/types.h>
-#include <dirent.h>
-main()
-{
-	DIR	*d;
-	struct	dirent	*dp;
-	char	*i;
-	int	c=0;
-
-	d = opendir(".");
-	while ((dp = readdir(d)) != 0)
-	{
-		i = (char *) dp->d_name;
-		c++;
-	}
-	closedir(d);
-	printf("%d\n", c);
-}
-E_O_F
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS "$cdirfile" $SYSLIBS > $tfile 2>&1
-
-if test "$?" != "0"
-then
-	echo "
-*** Could not compile test program for directory routines:
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS $cdirfile $SYSLIBS"
-	cat $tfile
-	echo "
-Check SRC/SYSINC/dirent.h before re-running install.sh"
-	exit 1
-fi
-
-mkdir $tdir
-touch $tdir/a $tdir/asjd $tdir/jsdhjas
-touch $tdir/kajshdjas $tdir/JH
-dir=`pwd`
-export dir
-(cd $tdir ; $dir/a.out > /tmp/ans 2>&1)
-rm -rf $tdir
-x=`cat /tmp/ans`
-if test "$x" != 7 -a "$x" != 5
-then
-	echo "
-*** Directory routines don't work!
-Check SRC/SYSINC/dirent.h before re-running install.sh"
-	exit 1
-fi
-
-#########################################################################
-#									#
-# Check whether variable argument lists work				#
-#									#
-#########################################################################
-
-cat << 'E_O_F' >$cfile
-#include <std.h>
-#include <stdlib.h>
-#if TEST_ANSI
-#include <stdarg.h>
-static int sub(char *, ...);
-#else
-#include <varargs.h>
-static int sub();
-#endif
-
-static char	arg1[] = "abc";
-static int	arg2 = 12345;
-static double	arg3 = 123.456;
-static char	arg4[] = "xyz";
-
-main(c, v)
-int c;
-char *v[];
-{
-	exit(sub(arg1, arg2, arg3, arg4));
-}
-
-static int
-#if TEST_ANSI
-sub(char *sarg1, ...)
-#else
-sub(sarg1, va_alist)
-char *sarg1;
-va_dcl
-#endif
-{
-	va_list ap;
-
-	if (sarg1 != arg1)
-		return 1;
-	
-#if TEST_ANSI
-	va_start(ap, sarg1);
-#else
-	va_start(ap);
-#endif
-
-	if (va_arg(ap, int) != arg2)
-		return 2;
-	
-	if (va_arg(ap, double) != arg3)
-		return 3;
-	
-	if (va_arg(ap, char *) != arg4)
-		return 4;
-	
-	va_end(ap);
-
-	return 0;
-}
-E_O_F
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS "$cfile" $SYSLIBS > $tfile 2>&1
-
-if test "$?" != "0" || grep arg "$tfile" > /dev/null 2>&1
-then
-	echo "
-*** Could not compile test program for variable argument lists
-
-$CC -I../INC -I../SYSINC $DEFINES $COPTS $cfile $SYSLIBS"
-	cat $tfile
-	echo "
-Check <stdarg.h>/<varargs.h> before re-running install.sh"
-	exit 1
-fi
-
-./a.out
-x=$?
-if test "$x" -ne 0
-then
-	echo "
-*** Variable argument lists don't work!  (test program exit code: $x)
-Check <stdarg.h>/<varargs.h> before re-running install.sh"
-	exit 1
-fi
-
-#########################################################################
-#									#
 # Set up the testroot 							#
 #									#
 #########################################################################
@@ -625,37 +479,9 @@
 #									#
 #########################################################################
 
-libs="vport vlib genlib tet_startup"
+libs="vport vlib"
 thrlibs=""
-utils="vprog vtools"
-for subset in $SUBSETS
-do
-	INSTALL_LIBS=""
-	INSTALL_THRLIBS=""
-	INSTALL_UTILS=""
-	. $VSXDIR/subsets/$subset/install_info
-	for i in $INSTALL_LIBS
-	do
-		case " $libs " in
-		*" $i "*) ;; # already in list
-		*) libs="$libs $i" ;;
-		esac
-	done
-	for i in $INSTALL_THRLIBS
-	do
-		case " $thrlibs " in
-		*" $i "*) ;; # already in list
-		*) thrlibs="$thrlibs $i" ;;
-		esac
-	done
-	for i in $INSTALL_UTILS
-	do
-		case " $utils " in
-		*" $i "*) ;; # already in list
-		*) utils="$utils $i" ;;
-		esac
-	done
-done
+utils="vprog"
 
 case $TEST_XNFS in
 [Yy])
@@ -681,14 +507,22 @@
 	then	echo "$dir make succeeded"
 	else	echo "$dir make failed:"
 		cat make.$target
+        exit 1
 	fi
     )
+    test "$?" -eq 1 && fail=1
 done
 
+if [ -n "$fail" ]; then
+    exit 1
+fi
+
 # end of output tee'd to journal file
 
 ) 2>&1 | tee "$JNLFILE"
 
+test "${PIPESTATUS[0]}" -eq "1" && exit 1
+
 # clean up: remove temporary files
 $rm_tmp1; $rm_tmp2
 
