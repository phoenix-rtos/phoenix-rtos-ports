#VSX_OPER - the name of the person running the VSX test suite
VSX_OPER="${USER:-Unknown}"

#VSX_ORG - the name of the organisation for whom VSX is being run
VSX_ORG="Phoenix Systems"

#VSX_SYS - the name of the system (hardware and software) on which the VSX
#	verification is being performed
VSX_SYS="Phoenix-RTOS"

#TEST_MODE - the VSX test mode to be used
TEST_MODE="POSIX96"

#TEST_XNFS - indicates whether to test the XNFS specification
#	The value should be "y" for XNFS testing, "n" for XSH testing.
TEST_XNFS="n"

#SUBSETS - a space-separated list of the subsets of VSX to be installed
#	For example: "base dm"
SUBSETS="base"

#VSXDIR - this parameter defines the source directory for the VSX software.
#	The value given to this parameter must be a full pathname
#   This parameter is set in build.sh script
VSXDIR=

#TET_EXECUTE - this parameter defines the directory from which the VSX tests
#	will be executed.
#	The value given to this parameter must be a full pathname
#   This parameter is set in build.sh script
TET_EXECUTE=

#SPEED - this parameter defines the speed of the machine on a 1-10 scale
#	A speed of 1 is given to a very fast machine and 10 to a very 
#	slow machine
SPEED="5"

#PATH - the command search path to be used when installing and building VSX.
#	Normally set to the PATH in effect when config.sh was run.
#	Must contain the directories where commands specified in other
#	parameters reside (if full path names are not given).
#PATH="$TET_ROOT/bin:$TET_ROOT/test_sets/BIN:$TET_ROOT/test_sets/TESTROOT/BIN:/sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin"

#INCDIRS - this parameter defines the directories which contain the include
#	files for the system being tested, in order of searching.
#	This parameter is normally set to /usr/include
#   This parameter is set in build.sh script
INCDIRS= 

#CC - this parameter defines the C compiler to be used in building the suite.
#	This parameter is normally set to a pathname for c89 or cc.
#	It must be set to (a pathname for) c89 for UNIX98 registration runs.
#   This parameter is set in build.sh script
CC=

#COPTS - this parameter defines any special command line options needed by the
#	C compiler.
#	This parameter is normally set to ""
# Set to -ansi with gcc to get a clean compiler namespace
COPTS=""

#THR_COPTS - this parameter defines C compiler options to be used instead of
#	COPTS when compiling code that will be linked with the TETware
#	thread-safe API library.  The options must be compatible with those
#	used in THR_COPTS in the TETware defines.mk file.
#	This parameter is only needed by some subsets.
THR_COPTS=""

#DEFINES - feature test macros appropriate for the test mode
#	This parameter is set automatically and should not need to be changed.
DEFINES="-D_POSIX_C_SOURCE=199506"

#LDFLAGS - this parameter defines any special link editor (loader) options 
#	needed by the C compiler link edit phase.
#	This parameter is normally set to ""
#   This parameter is set in build.sh script
LDFLAGS=

#CFPURE -  this parameter defines the link editor option used to produce a
#	pure executable (shared text) program.
#	This parameter is only needed by some subsets, and is not used
#	when testing XNFS.  Some systems require this parameter to be set
#	to -n (non-X/Open option).  Normally it is set to "".
CFPURE=""

#LORDER - this parameter defines the sequential object library ordering program.
#	If the system has an archiver which does not need lorder this
#	parameter should be set to "echo".
LORDER="echo"

#TSORT - topological sort program used in library ordering.
#	If LORDER has been set to "echo", this parameter should be set to "cat".
#	Otherwise this parameter should be set to "tsort"
TSORT="cat"

#RANLIB - this parameter defines the random object library ordering program.
#	If this parameter is set to "ranlib", LORDER should be set to "echo"
#	and TSORT set to "cat".
#	Otherwise this parameter should be set to "echo"
#   This parameter is set in build.sh script
RANLIB=

#AR - the command (and options) used to create a library archive.
#	This parameter is normally set to "ar cr"
#   This parameter is set in build.sh script
AR=

#CHOWN - the command used to change the ownership of files.
#	This parameter is normally set to "chown" or "/etc/chown"
CHOWN="chown"

#CHGRP - the command used to change the group ownership of files.
#	This parameter is normally set to "chgrp"
CHGRP="chgrp"

#CHMOD - the command used to change the mode of files
#	This parameter is normally set to "chmod"
CHMOD="chmod"

#MLIB - the name of the mathematics library
#	This parameter is only needed by some subsets, and is not used
#	when testing XNFS.  It is typically set to "/usr/lib/libm.a".
MLIB=""

#RPCLIB - the name of the RPC library
#	This parameter is only used when testing XNFS.
RPCLIB=""

#RPC_TYPE - whether the RPC library is TLI or socket-based
#	This parameter must be set to "TLI" or "socket".
#	This parameter is only used when testing XNFS.
RPC_TYPE=""

#SYSLIBS - the names of additional libraries needed to compile VSX
#	These library names should be full path names.
#	Typical libraries needed on this line are:-
#		The library containing the directory routines
#		The library containing the enhanced memory allocation routines
#		The library containing the vprintf function
#		The library containing the NLS routines
#	The parameter should be of the form "/usr/lib/libnam1.a /lib/libnam3.a"
#	This parameter will often be set to ""
SYSLIBS=""

#XNFS_CLIENT - the name of the XNFS client system
#	This parameter is only used when testing XNFS.
XNFS_CLIENT=""

#XNFS_SERVER - the name of the XNFS server system
#	This parameter is only used when testing XNFS.
XNFS_SERVER=""

#SERVER_TET_ROOT - the pathname of the TET_ROOT directory on the server
#	This parameter is only used when testing XNFS.
SERVER_TET_ROOT=""

#NOSPC_DEV - the mountable device to be used for ENOSPC testing
#	This parameter is only needed by some subsets, and is not used
#	when testing XNFS.
NOSPC_DEV="NOSPC_DEV"

#VPRINTF_SUPP - indicates whether the ANSI function vprintf() is supported
#	This parameter must be "y" in X/Open modes but may be "n" in
#	POSIX and FIPS modes.
VPRINTF_SUPP="y"

#LONG_DOUBLE_SUPP - whether the compiler supports the "long double" type
#	This parameter is not used when testing XNFS.
#	This parameter must be set to "y" if long double is supported
LONG_DOUBLE_SUPP="y"

#SIGNAL_SUPP - indicates whether the ANSI function signal() is supported
#	This parameter is not used when testing XNFS.
#	This parameter must be "y" in X/Open modes but may be "n" in
#	POSIX and FIPS modes.
SIGNAL_SUPP="y"
