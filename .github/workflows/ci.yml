# vim:sw=2:ts=2
name: ci

# on events
on:
  push:
    branches:
      - master
      - 'feature/*'
  pull_request:
    branches:
      - master
      - 'feature/*'

# jobs
jobs:
  build:
    name: build image
    runs-on: ubuntu-latest
    outputs:
      build_result: ${{ steps.build.outcome }}
    strategy:
      matrix:
        target: ['armv7a7-imx6ull', 'armv7a9-zynq7000', 'armv7m7-imxrt106x', 'armv7m7-imxrt117x', 'armv7m4-stm32l4x6', 'host-pc', 'ia32-generic', 'riscv64-spike', 'riscv64-virt']
    steps:
      # step 1: checkout phoenix-rtos-project repository code inside the workspace directory of the runner
      - name: Checkout phoenix-rtos-project
        uses: actions/checkout@v2
        with:
          repository: phoenix-rtos/phoenix-rtos-project
          submodules: recursive

      # step 2: update the submodule (recurse-sumbodules=no is needed for phoenix-rtos-lwip checkout not to fail, but it fails to update the submodule (TODO)
      - name: Update submodule ${{ github.event.repository.name }}
        working-directory: ${{ github.event.repository.name }}
        run: |
          git fetch --recurse-submodules=no --force ${{ github.event.repository.clone_url }} "+refs/heads/*:refs/remotes/origin/*"
          git fetch --recurse-submodules=no --force ${{ github.event.repository.clone_url }} "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git checkout ${{ github.sha }} || git checkout ${{ github.event.pull_request.head.sha }}

      # attach GCC problem matcher... might not work because of submodules... just trying
      - uses: ammaraskar/gcc-problem-matcher@master

      # step 3: use our custom action to build the project
      - name: Build
        id: build
        uses: ./.github/actions/phoenix-build
        with:
          target: ${{ matrix.target }}
          param1: 'core'
          param2: 'fs'
          param3: 'project'
          param4: 'ports'
          param5: 'image'

      # step 4: upload contents of "_boot" as build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: phoenix-rtos-${{ matrix.target }}
          path: _boot

  mail-notification:
    if: ${{ failure() }}
    needs: build
    name: notify ci team using e-mail
    runs-on: ubuntu-latest
    steps:
      - name: Send mail
        # If there is some failure, not caused by build step send mail
        if: ${{ needs.build.outputs.build_result != 'failure' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.CI_BOT_EMAIL_USERNAME }}
          password: ${{ secrets.CI_BOT_EMAIL_PASSWORD }}
          subject: Github Actions Warning
          to: ci@phoenix-rtos.com
          # Required sender full name (address can be skipped):
          from: Continuous Integration Bot
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          body: There is some problem with GH Actions. https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
