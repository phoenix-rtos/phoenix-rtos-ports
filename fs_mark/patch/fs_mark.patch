--- fs_mark-3.3/fs_mark.c	2023-07-10 15:47:05.889696230 +0200
+++ fs_mark-3.3.phoenix/fs_mark.c	2023-07-31 12:40:45.016383503 +0200
@@ -29,7 +29,7 @@
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <sys/stat.h>
-#include <sys/vfs.h>
+#include <sys/statvfs.h>
 #include <sys/time.h>
 
 #include <fcntl.h>
@@ -42,9 +42,8 @@
 #include <ctype.h>
 #include <time.h>
 
-#include <linux/types.h>
-#include <linux/limits.h>
-#include <linux/unistd.h>
+#include <limits.h>
+#include <signal.h>
 
 #include "fs_mark.h"
 
@@ -142,7 +141,8 @@
 			break;
 
 		case 'l':	/* Log file name */
-			strncpy(log_file_name, optarg, PATH_MAX);
+			strncpy(log_file_name, optarg, sizeof(log_file_name));
+			log_file_name[sizeof(log_file_name) - 1] = '\0';
 			break;
 
 		case 'L':	/* number of iterations */
@@ -493,11 +493,11 @@
  */
 int get_df_full(char *dir_name)
 {
-	struct statfs fs_buf;
+	struct statvfs fs_buf;
 	float df_used, used_blocks;
 	int df_percent_used;
 
-	if (statfs(dir_name, &fs_buf) == -1) {
+	if (statvfs(dir_name, &fs_buf) == -1) {
 		fprintf(stderr, "fs_mark: statfs failed on %s %s\n", dir_name,
 			strerror(errno));
 		cleanup_exit();
@@ -517,10 +517,10 @@
  */
 unsigned long long get_bytes_free(char *dir_name)
 {
-	struct statfs fs_buf;
+	struct statvfs fs_buf;
 	unsigned long long bytes_free;
 
-	if (statfs(dir_name, &fs_buf) == -1) {
+	if (statvfs(dir_name, &fs_buf) == -1) {
 		fprintf(stderr, "fs_mark: statfs failed on %s %s\n", dir_name,
 			strerror(errno));
 		cleanup_exit();
