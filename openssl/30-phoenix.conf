#phoenix

my %targets = (
	"phoenix" => {
		template         => 1,
		inherit_from     => [ "BASE_unix" ],
		sys_id           => "PHOENIX_RTOS",
		defines          => add("OPENSSL_SYS_PHOENIX"),
		disable          => [ "dynamic-engine", "pic", "shared", "threads", "tests", "tls1_3" ],
		enable           => [ "epoll", "pktinfo" ],
	},

	"phoenix-armv7a7-imx6ull" => {
		inherit_from     => [ "phoenix", asm("armv4_asm") ],
		cc               => "arm-phoenix-gcc",
		ld               => "arm-phoenix-ld",
		ranlib           => "arm-phoenix-gcc-ranlib",
		cflags           => "-Os -Wall -Wstrict-prototypes -g -mcpu=cortex-a7 -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb -fomit-frame-pointer -mno-unaligned-access -fdata-sections -ffunction-sections -Wl,--gc-sections -Wl,-z,max-page-size=0x1000",
		arflags          => "-r",
	},

	"phoenix-ia32-generic" => {
		inherit_from     => [ "phoenix", asm("x86_elf_asm") ],
		cc               => "i386-pc-phoenix-gcc",
		ld               => "i386-pc-phoenix-ld",
		ranlib           => "i386-pc-phoenix-gcc-ranlib",
		cflags           => "-Os -march=i586 -mtune=generic -Wall -Wstrict-prototypes -g -fomit-frame-pointer -fdata-sections -ffunction-sections",
		arflags          => "-r",
	},

	"phoenix-riscv64-generic" => {
		inherit_from     => [ "phoenix" ],
		cc               => "riscv64-phoenix-gcc",
		ld               => "riscv64-phoenix-ld",
		ranlib           => "riscv64-phoenix-gcc-ranlib",
		cflags           => "-Os -Wall -Wstrict-prototypes -fomit-frame-pointer -ffreestanding -mcmodel=medany",
		arflags          => "-r",
	},

	"phoenix-armv7m7-imxrt117x" => {
		inherit_from     => [ "phoenix", asm("armv4_asm") ],
		cc               => "arm-phoenix-gcc",
		ld               => "arm-phoenix-gcc",
		ranlib           => "arm-phoenix-gcc-ranlib",
		cflags           => "-Os -Wall -Wstrict-prototypes -g -mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-d16 -mthumb -fomit-frame-pointer -mno-unaligned-access -fstack-usage -fpic -fpie -msingle-pic-base -mno-pic-data-is-text-relative -ffunction-sections -fdata-sections",
		# OpenSSL assumes armv7-a in asm files, when it detects that the arm version is >= 7. Additionally it then uses vector instructions. This overwrite prevents this behaviour.
		cppflags         => "-D__ARM_ARCH__=6",
		lflags           => "-Wl,-z,max-page-size=0x10 -Wl,-q",
		arflags          => "-r",
	},
);
