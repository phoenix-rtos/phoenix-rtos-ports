diff -ruN a/kdrive/phoenix/keyboard.c b/kdrive/phoenix/keyboard.c
--- a/kdrive/phoenix/keyboard.c	2024-08-05 09:04:38.653732769 +0200
+++ b/kdrive/phoenix/keyboard.c	2024-08-06 13:59:18.567821129 +0200
@@ -5,14 +5,183 @@
 #include "kkeymap.h"
 #define XK_PUBLISHING
 #include <termios.h>
+#include <X11/keysym.h>
 #include <sys/ioctl.h>
+#include <pthread.h>
+
+static int PhoenixKbdFd;
+
+static const KeySym phoenix_to_x[128] = {
+/* 0 unused */     NoSymbol,
+/* 1 ESCape */     XK_Escape,
+/* 2 1 */          XK_1,
+/* 3 2 */          XK_2,
+/* 4 3 */          XK_3,
+/* 5 4 */          XK_4,
+/* 6 5 */          XK_5,
+/* 7 6 */          XK_6,
+/* 8 7 */          XK_7,
+/* 9 8 */          XK_8,
+/* 10 9 */         XK_9,
+/* 11 0 */         XK_0,
+/* 12 - */         XK_minus,
+/* 13 = */         XK_equal,
+/* 14 backspace */ XK_BackSpace,
+/* 15 tab */       XK_Tab,
+/* 16 q */         XK_q,
+/* 17 w */         XK_w,
+/* 18 e */         XK_e,
+/* 19 r */         XK_r,
+/* 20 t */         XK_t,
+/* 21 y */         XK_y,
+/* 22 u */         XK_u,
+/* 23 i */         XK_i,
+/* 24 o */         XK_o,
+/* 25 p */         XK_p,
+/* 26 [ */         XK_bracketleft,
+/* 27 ] */         XK_bracketright,
+/* 28 return */    XK_Return,
+/* 29 control */   XK_Control_L,
+/* 30 a */         XK_a,
+/* 31 s */         XK_s,
+/* 32 d */         XK_d,
+/* 33 f */         XK_f,
+/* 34 g */         XK_g,
+/* 35 h */         XK_h,
+/* 36 j */         XK_j,
+/* 37 k */         XK_k,
+/* 38 l */         XK_l,
+/* 39 ; */         XK_semicolon,
+/* 40 ' */         XK_apostrophe,
+/* 41 ` */         XK_grave,
+/* 42 shift */     XK_Shift_R,
+/* 43 \ */         XK_backslash,
+/* 44 z */         XK_z,
+/* 45 x */         XK_x,
+/* 46 c */         XK_c,
+/* 47 v */         XK_v,
+/* 48 b */         XK_b,
+/* 49 n */         XK_n,
+/* 50 m */         XK_m,
+/* 51 , */         XK_comma,
+/* 52 . */         XK_period,
+/* 53 / */         XK_slash,
+/* 54 shift */     XK_Shift_L,
+/* 55 kp * */      NoSymbol, // TODO ?????
+/* 56 alt */       XK_Alt_L,
+/* 57 space */     XK_space,
+/* 58 caps */      XK_Caps_Lock,
+/* 59 f1 */        XK_F1,
+/* 60 f2 */        XK_F2,
+/* 61 f3 */        XK_F3,
+/* 62 f4 */        XK_F4,
+/* 63 f5 */        XK_F5,
+/* 64 f6 */        XK_F6,
+/* 65 f7 */        XK_F7,
+/* 66 f8 */        XK_F8,
+/* 67 f9 */        XK_F9,
+/* 68 f10 */       XK_F10,
+/* 69 num lock */  XK_Num_Lock,
+/* 70 scroll lock*/ XK_Scroll_Lock,
+/* 71 kp 7 */      NoSymbol,
+/* 72 kp 8 */      NoSymbol,
+/* 73 kp 9 */      NoSymbol,
+/* 74 kp - */      NoSymbol,
+/* 75 kp 4 */      NoSymbol,
+/* 76 kp 5 */      NoSymbol,
+/* 77 kp 6 */      NoSymbol,
+/* 78 kp + */      NoSymbol,
+/* 79 kp 1 */      NoSymbol,
+/* 80 kp 2 */      NoSymbol,
+/* 81 kp 3 */      NoSymbol,
+/* 82 kp 0 */      NoSymbol,
+/* 83 kp . */      NoSymbol,
+/* 84 0 */         NoSymbol,
+/* 85 0 */         NoSymbol,
+/* 86 0 */         NoSymbol,
+/* 87 f11 */       XK_F11,
+/* 88 f12 */       XK_F12,
+/* 89 0 */         NoSymbol,
+/* 90 0 */         NoSymbol,
+/* 91 0 */         NoSymbol,
+/* 92 0 */         NoSymbol,
+/* 93 0 */         NoSymbol,
+/* 94 0 */         NoSymbol,
+/* 95 0 */         NoSymbol,
+/* 96 extended */  NoSymbol,
+/* 97 0 */         NoSymbol,
+/* 98 0 */         NoSymbol,
+/* 99 0 */         NoSymbol,
+/* 100 */          NoSymbol,
+/* 101 */          NoSymbol,
+/* 102 */          NoSymbol,
+/* 103 */          NoSymbol,
+/* 104 */          NoSymbol,
+/* 105 */          NoSymbol,
+/* 106 */          NoSymbol,
+/* 107 */          NoSymbol,
+/* 108 */          NoSymbol,
+/* 109 */          NoSymbol,
+/* 110 */          NoSymbol,
+/* 111 */          NoSymbol,
+/* 112 */          NoSymbol,
+/* 113 */          NoSymbol,
+/* 114 */          NoSymbol,
+/* 115 */          NoSymbol,
+/* 116 */          NoSymbol,
+/* 117 */          NoSymbol,
+/* 118 */          NoSymbol,
+/* 119 */          NoSymbol,
+/* 120 */          NoSymbol,
+/* 121 */          NoSymbol,
+/* 122 */          NoSymbol,
+/* 123 */          NoSymbol,
+/* 124 */          NoSymbol,
+/* 125 */          NoSymbol,
+/* 126 */          NoSymbol,
+/* 127 */          NoSymbol
+};
+
+
+static void* event_watcher(void* arg) {
+  printf("hello\n");
+  int fd = *((int*) arg);
+	unsigned char c;
+
+	while (1) {
+    if (read(fd, &c, 1) > 0) {
+      KdEnqueueKeyboardEvent(c & 0x7f, c & 0x80);
+    }
+    usleep(200);
+  }
+}
+
+#define NR_KEYS 101
 
 static void PhoenixKeyboardLoad(void)
 {
+	kdMinScanCode = 0;
+	kdMaxScanCode = 127;
+
+  KeySym *k;
+  int i;
+	int row;
+
+	row = 0;
+	for (i = 0; i < NR_KEYS && row < KD_MAX_LENGTH; ++i) {
+    k = kdKeymap + row * KD_MAX_WIDTH;
+    k[0] = phoenix_to_x[i];
+    row++;
+  }
 }
 
 static int PhoenixKeyboardInit(void)
 {
+	PhoenixKbdFd = open("/dev/kbd", O_RDONLY);
+
+  pthread_t thread;
+
+  pthread_create(&thread, NULL, event_watcher, &PhoenixKbdFd);
 }
 
 static void PhoenixKeyboardFini(void)
